{"name": "test_flights_currency_change[JPY-JPY \\xa5, -Currencies are matching]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF620195E42+3538674]\n\t(No symbol) [0x00007FF61FDB4C02]\n\t(No symbol) [0x00007FF61FC65AEB]\n\t(No symbol) [0x00007FF61FCABF4E]\n\t(No symbol) [0x00007FF61FCAC0CC]\n\t(No symbol) [0x00007FF61FCEE477]\n\t(No symbol) [0x00007FF61FCCF0EF]\n\t(No symbol) [0x00007FF61FCEBDE3]\n\t(No symbol) [0x00007FF61FCCEE53]\n\t(No symbol) [0x00007FF61FC9F514]\n\t(No symbol) [0x00007FF61FCA0631]\n\tGetHandleVerifier [0x00007FF6201C6CAD+3738973]\n\tGetHandleVerifier [0x00007FF62021C506+4089270]\n\tGetHandleVerifier [0x00007FF620214823+4057299]\n\tGetHandleVerifier [0x00007FF61FEE5C49+720121]\n\t(No symbol) [0x00007FF61FDC126F]\n\t(No symbol) [0x00007FF61FDBC304]\n\t(No symbol) [0x00007FF61FDBC432]\n\t(No symbol) [0x00007FF61FDABD04]\n\tBaseThreadInitThunk [0x00007FFD6575257D+29]\n\tRtlUserThreadStart [0x00007FFD6686AA58+40]", "trace": "self = <tests.test_changing_currency.TestChangingCurrency object at 0x0000021642D42FC0>\ndriver_undetected = <seleniumbase.undetected.Chrome (session=\"2c4504415cf81e72086b759d29121e5b\")>\nwebsite_currency = 'JPY', match_currency = 'JPY ¥, '\nexpected = 'Currencies are matching'\n\n    @pytest.mark.parametrize('website_currency, match_currency, expected', CurrencyData.currency_list)\n    def test_flights_currency_change(self, driver_undetected, website_currency, match_currency, expected):\n        ccs = ChangeCurrencySteps(driver_undetected)\n        ccs.open_page(Urls.HOME_URL)\n        ccs.choose_currency(website_currency)\n    \n        with soft_assertions():\n>           assert_that(match_currency).contains(ccs.get_flight_price_currency())\n\ntest_changing_currency.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\final_project\\steps\\ChangeCurrencySteps.py:94: in get_flight_price_currency\n    input_loc = self.wait_for(ccp.TO_INPUT)\n..\\final_project\\steps\\common_actions.py:15: in wait_for\n    return self._wait.until(ec.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2c4504415cf81e72086b759d29121e5b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000216442B5A80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF620195E42+3538674]\nE       \t(No symbol) [0x00007FF61FDB4C02]\nE       \t(No symbol) [0x00007FF61FC65AEB]\nE       \t(No symbol) [0x00007FF61FCABF4E]\nE       \t(No symbol) [0x00007FF61FCAC0CC]\nE       \t(No symbol) [0x00007FF61FCEE477]\nE       \t(No symbol) [0x00007FF61FCCF0EF]\nE       \t(No symbol) [0x00007FF61FCEBDE3]\nE       \t(No symbol) [0x00007FF61FCCEE53]\nE       \t(No symbol) [0x00007FF61FC9F514]\nE       \t(No symbol) [0x00007FF61FCA0631]\nE       \tGetHandleVerifier [0x00007FF6201C6CAD+3738973]\nE       \tGetHandleVerifier [0x00007FF62021C506+4089270]\nE       \tGetHandleVerifier [0x00007FF620214823+4057299]\nE       \tGetHandleVerifier [0x00007FF61FEE5C49+720121]\nE       \t(No symbol) [0x00007FF61FDC126F]\nE       \t(No symbol) [0x00007FF61FDBC304]\nE       \t(No symbol) [0x00007FF61FDBC432]\nE       \t(No symbol) [0x00007FF61FDABD04]\nE       \tBaseThreadInitThunk [0x00007FFD6575257D+29]\nE       \tRtlUserThreadStart [0x00007FFD6686AA58+40]\n\nC:\\Users\\sabro\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\final-project-plEYY5ae-py3.12\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "parameters": [{"name": "website_currency", "value": "'JPY'"}, {"name": "match_currency", "value": "'JPY ¥, '"}, {"name": "expected", "value": "'Currencies are matching'"}], "start": 1707169563735, "stop": 1707169619577, "uuid": "552df016-5222-4d07-b781-7ef60e0b21b0", "historyId": "d2053730dcfd26480746ddabb06677f1", "testCaseId": "a33ece8d21b3357d7aa359228a2b81b6", "fullName": "tests.test_changing_currency.TestChangingCurrency#test_flights_currency_change", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_changing_currency"}, {"name": "subSuite", "value": "TestChangingCurrency"}, {"name": "host", "value": "Alice"}, {"name": "thread", "value": "14696-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_changing_currency"}]}